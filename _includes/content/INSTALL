## Download

PIntron is only distributed as source code.

The latest source code version can be downloaded from the [GitHub
page](https://github.com/AlgoLab/PIntron) as a
[zip](https://github.com/AlgoLab/PIntron/zipball/master) or as
[tar](https://github.com/AlgoLab/PIntron/tarball/master) archive.
It is also possible to clone the source repository using the following
command:

    git clone https://github.com/AlgoLab/PIntron.git

We release only stable versions, therefore you are encouraged to
always upgrade to the latest version.
Anyway, older versions are also
[available](https://github.com/AlgoLab/PIntron/tags).

Notice that, since version **1.3.0**, the JSON schema of PIntron
main output file and some of its program options have slightly changed!  
The on-line documentation reflects such changes.
We encourage all users to migrate to the new (improved) schema, but, if
it is not possible, please use version
[*1.2.59*](https://github.com/AlgoLab/PIntron/releases/tag/v1.2.59).


## Requirements

PIntron requires the following free software:

- Python v3.0 or newer. Python v3.1 or newer is
  recommended
- Perl (tested on Perl v5.10.1 but it should work also with older
  versions)
- A recent version of the standard GNU toolchain (gcc, make).

## Compilation and Installation

The build process is driven by the GNU make utility and can be performed
by the following invocation:

    make dist

The command will produce a compressed archive `dist/pintron-*.tar.gz`
that can be used for the installation or the execution.

The binary package is composed by the directory `bin`, containing all
the executables needed to run PIntron, and the directory `doc`,
containing the documentation and a simple complete example.
For installing PIntron, you should copy the executables of the `bin/`
directory to a directory of the `PATH` or to a custom directory.
If you do not want to mess with your `PATH` variable or you simply
want to test the program, you can invoke PIntron with the complete
path of the custom directory and use the `--bin-dir` program option to
specify such directory. For example, if PIntron executables are located
in `~/dev/PIntron/bin`, then it can be executed with the following
commands:

    pintron_bindir=~/dev/PIntron/bin ; $pintron_bindir/pintron --bin-dir=$pintron_bindir



